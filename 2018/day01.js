'use strict'

// Part 1
// ======

const part1 = input => {
  /*var d = 0;
  input.split('\n').forEach( y =>  {
      if (y.indexOf('+') > -1) d += Number.parseInt(y.substring(1))  
      if (y.indexOf('-') > -1) d -= Number.parseInt(y.substring(1))
  })
  
  return d*/
  //return input.split('\n').reduce((x,y)=>Number(x)+Number(y)) // Part1 answer
  /*let i = "+1\n\
          +1\n\
          +2\n\
          -2\n\
          +4\n\
          -2\n\
          +3";
          */
          /*
          0+1=1
          1+1=2
          2+2=4
          2-2=2
          2+4=6
          6-2=4
          4+3=7
          */
  let i = "\
  +11 \n \
  +9 \n \
  +15 \n \
  -17 \n \
  +8 \n \
  +16 \n \
  +5 \n \
  +13 \n \
  +8 \n \
  -6 \n \
  +12 \n \
  -17 \n \
  -16 \n \
  +13 \n \
  +16 \n \
  -15 \n \
  -5 \n \
  +11 \n \
  +19 \n \
  +5 \n \
  -8 \n \
  +20 \n \
  +18 \n \
  +15 \n \
  -4 \n \
  -12 \n \
  +8 \n \
  +2 \n \
  +15 \n \
  +12 \n \
  -13 \n \
  -4 \n \
  -1 \n \
  -14 \n \
  -15 \n \
  -6 \n \
  -9 \n \
  -13 \n \
  +18 \n \
  +13 \n \
  +6 \n \
  -8 \n \
  -3 \n \
  -19 \n \
  +8 \n \
  +17 \n \
  +8 \n \
  +5 \n \
  -11 \n \
  +15 \n \
  -7 \n \
  +9 \n \
  -18 \n \
  -9 \n \
  +17 \n \
  -14 \n \
  -19 \n \
  +4 \n \
  -6 \n \
  +4 \n \
  +1 \n \
  -12 \n \
  +4 \n \
  -1 \n \
  -9 \n \
  +4 \n \
  +19 \n \
  +20 \n \
  +11 \n \
  +8 \n \
  +19 \n \
  -13 \n \
  +17 \n \
  +6 \n \
  +8 \n \
  -11 \n \
  +5 \n \
  +9 \n \
  -15 \n \
  +17 \n \
  -12 \n \
  +6 \n \
  -19 \n \
  -2 \n \
  +17 \n \
  -18 \n \
  +7 \n \
  -5 \n \
  +19 \n \
  +15 \n \
  +5 \n \
  -6 \n \
  +2 \n \
  +5 \n \
  +18 \n \
  +11 \n \
  +2 \n \
  +5 \n \
  -14 \n \
  +17 \n \
  +17 \n \
  +1 \n \
  +17 \n \
  -9 \n \
  -1 \n \
  +5 \n \
  -11 \n \
  +5 \n \
  -17 \n \
  +2 \n \
  +14 \n \
  +16 \n \
  -3 \n \
  +17 \n \
  +18 \n \
  +1 \n \
  -16 \n \
  +19 \n \
  -11 \n \
  -10 \n \
  +3 \n \
  +8 \n \
  +17 \n \
  +19 \n \
  -18 \n \
  +6 \n \
  -1 \n \
  -2 \n \
  +14 \n \
  -2 \n \
  +12 \n \
  +11 \n \
  +1 \n \
  -19 \n \
  -1 \n \
  +18 \n \
  +13 \n \
  -6 \n \
  -10 \n \
  -13 \n \
  +12 \n \
  -11 \n \
  +19 \n \
  +14 \n \
  +17 \n \
  -2 \n \
  -18 \n \
  -4 \n \
  +11 \n \
  -12 \n \
  -2 \n \
  -21 \n \
  +7 \n \
  -1 \n \
  -5 \n \
  -13 \n \
  -18 \n \
  -18 \n \
  -7 \n \
  +9 \n \
  +12 \n \
  +6 \n \
  -12 \n \
  +20 \n \
  -19 \n \
  +6 \n \
  -19 \n \
  +3 \n \
  -16 \n \
  +20 \n \
  -17 \n \
  -8 \n \
  +4 \n \
  +8 \n \
  -21 \n \
  +18 \n \
  -6 \n \
  -13 \n \
  +2 \n \
  +5 \n \
  -14 \n \
  -16 \n \
  -19 \n \
  -17 \n \
  +4 \n \
  -15 \n \
  -11 \n \
  -3 \n \
  +6 \n \
  +13 \n \
  +18 \n \
  -16 \n \
  -16 \n \
  -15 \n \
  -15 \n \
  -2 \n \
  +1 \n \
  -3 \n \
  +13 \n \
  +25 \n \
  +1 \n \
  +14 \n \
  -8 \n \
  -8 \n \
  -19 \n \
  +7 \n \
  +11 \n \
  +20 \n \
  +5 \n \
  -9 \n \
  +8 \n \
  +19 \n \
  -9 \n \
  +3 \n \
  +1 \n \
  +1 \n \
  -12 \n \
  +18 \n \
  +15 \n \
  -5 \n \
  +11 \n \
  -1 \n \
  +18 \n \
  -2 \n \
  -18 \n \
  -14 \n \
  -1 \n \
  -16 \n \
  +12 \n \
  +12 \n \
  -20 \n \
  +10 \n \
  +25 \n \
  -13 \n \
  -17 \n \
  -20 \n \
  -13 \n \
  +11 \n \
  -40 \n \
  -19 \n \
  +5 \n \
  -21 \n \
  -9 \n \
  -15 \n \
  -6 \n \
  +3 \n \
  +13 \n \
  -5 \n \
  -2 \n \
  +33 \n \
  +3 \n \
  -7 \n \
  +42 \n \
  +32 \n \
  -13 \n \
  +2 \n \
  +37 \n \
  -1 \n \
  -20 \n \
  +30 \n \
  +3 \n \
  +8 \n \
  +10 \n \
  +11 \n \
  -5 \n \
  -26 \n \
  +35 \n \
  +16 \n \
  -12 \n \
  +9 \n \
  +16 \n \
  +18 \n \
  -13 \n \
  -15 \n \
  +19 \n \
  +6 \n \
  +18 \n \
  +16 \n \
  +11 \n \
  +16 \n \
  -2 \n \
  -10 \n \
  +1 \n \
  -2 \n \
  +17 \n \
  +7 \n \
  -1 \n \
  +17 \n \
  +6 \n \
  +15 \n \
  +7 \n \
  -5 \n \
  -6 \n \
  +9 \n \
  -4 \n \
  -17 \n \
  -14 \n \
  -1 \n \
  -21 \n \
  -2 \n \
  +15 \n \
  +3 \n \
  +8 \n \
  -18 \n \
  -17 \n \
  -14 \n \
  +6 \n \
  -17 \n \
  +20 \n \
  +13 \n \
  +14 \n \
  -1 \n \
  -1 \n \
  +3 \n \
  -11 \n \
  +19 \n \
  +19 \n \
  +7 \n \
  -18 \n \
  -9 \n \
  +11 \n \
  -12 \n \
  +11 \n \
  +4 \n \
  +2 \n \
  +8 \n \
  -2 \n \
  +6 \n \
  -20 \n \
  +5 \n \
  +6 \n \
  -13 \n \
  -8 \n \
  +6 \n \
  +11 \n \
  +8 \n \
  +2 \n \
  +7 \n \
  +11 \n \
  -7 \n \
  +18 \n \
  +11 \n \
  +15 \n \
  -16 \n \
  -18 \n \
  +6 \n \
  +10 \n \
  +6 \n \
  +15 \n \
  +13 \n \
  +4 \n \
  +4 \n \
  +14 \n \
  +14 \n \
  -47 \n \
  +17 \n \
  -7 \n \
  -20 \n \
  -1 \n \
  +19 \n \
  +16 \n \
  -23 \n \
  -13 \n \
  -17 \n \
  +13 \n \
  -8 \n \
  +6 \n \
  -20 \n \
  +4 \n \
  +15 \n \
  +4 \n \
  +19 \n \
  +19 \n \
  -7 \n \
  -24 \n \
  -17 \n \
  -19 \n \
  -2 \n \
  +19 \n \
  -13 \n \
  +8 \n \
  -4 \n \
  -19 \n \
  -9 \n \
  +29 \n \
  +21 \n \
  -29 \n \
  +2 \n \
  +15 \n \
  +22 \n \
  +1 \n \
  +21 \n \
  -13 \n \
  -14 \n \
  +12 \n \
  -57 \n \
  -5 \n \
  -49 \n \
  -10 \n \
  -19 \n \
  -19 \n \
  -6 \n \
  +7 \n \
  +21 \n \
  -12 \n \
  -13 \n \
  -13 \n \
  +4 \n \
  -15 \n \
  +9 \n \
  +21 \n \
  -7 \n \
  +19 \n \
  +32 \n \
  +31 \n \
  -27 \n \
  -21 \n \
  +25 \n \
  -101 \n \
  +69 \n \
  -75 \n \
  +26 \n \
  -22 \n \
  -45 \n \
  -30 \n \
  +5 \n \
  -40 \n \
  -15 \n \
  -880 \n \
  -60727 \n \
  +14 \n \
  -13 \n \
  -18 \n \
  +7 \n \
  +2 \n \
  -5 \n \
  +6 \n \
  +14 \n \
  +5 \n \
  +5 \n \
  -18 \n \
  -15 \n \
  -9 \n \
  +7 \n \
  -10 \n \
  +19 \n \
  +4 \n \
  +7 \n \
  +6 \n \
  +3 \n \
  +21 \n \
  +2 \n \
  +5 \n \
  -19 \n \
  +15 \n \
  -11 \n \
  -19 \n \
  -7 \n \
  -1 \n \
  -16 \n \
  +4 \n \
  -12 \n \
  -15 \n \
  +3 \n \
  +5 \n \
  -6 \n \
  -14 \n \
  +11 \n \
  -16 \n \
  -7 \n \
  -15 \n \
  +8 \n \
  +12 \n \
  -2 \n \
  -9 \n \
  -12 \n \
  -17 \n \
  +19 \n \
  -5 \n \
  -19 \n \
  +16 \n \
  -10 \n \
  -13 \n \
  -14 \n \
  -1 \n \
  -10 \n \
  -18 \n \
  -6 \n \
  -11 \n \
  +8 \n \
  -11 \n \
  +4 \n \
  +14 \n \
  +9 \n \
  +8 \n \
  -18 \n \
  -9 \n \
  +8 \n \
  -19 \n \
  -5 \n \
  -14 \n \
  +13 \n \
  +19 \n \
  +13 \n \
  +16 \n \
  +19 \n \
  -4 \n \
  -4 \n \
  +3 \n \
  +19 \n \
  -4 \n \
  -7 \n \
  -15 \n \
  +6 \n \
  -9 \n \
  -15 \n \
  +12 \n \
  -14 \n \
  +6 \n \
  -17 \n \
  +9 \n \
  +13 \n \
  -4 \n \
  -20 \n \
  +17 \n \
  -9 \n \
  -12 \n \
  +16 \n \
  +6 \n \
  -9 \n \
  +19 \n \
  +10 \n \
  +11 \n \
  +17 \n \
  -19 \n \
  -1 \n \
  +12 \n \
  +12 \n \
  +1 \n \
  -6 \n \
  -1 \n \
  +4 \n \
  -12 \n \
  +11 \n \
  -14 \n \
  +19 \n \
  -3 \n \
  -9 \n \
  -6 \n \
  -23 \n \
  -2 \n \
  -13 \n \
  +18 \n \
  -2 \n \
  +10 \n \
  +2 \n \
  +8 \n \
  -9 \n \
  -20 \n \
  -17 \n \
  -21 \n \
  -14 \n \
  +11 \n \
  -5 \n \
  -15 \n \
  +2 \n \
  -9 \n \
  +4 \n \
  -7 \n \
  -12 \n \
  +9 \n \
  -1 \n \
  -11 \n \
  +1 \n \
  -10 \n \
  +11 \n \
  -17 \n \
  -10 \n \
  -17 \n \
  -3 \n \
  -10 \n \
  +11 \n \
  +15 \n \
  -19 \n \
  -14 \n \
  +1 \n \
  +2 \n \
  +18 \n \
  +17 \n \
  +3 \n \
  +17 \n \
  -18 \n \
  -15 \n \
  +2 \n \
  -3 \n \
  -14 \n \
  +9 \n \
  +9 \n \
  +6 \n \
  -18 \n \
  +13 \n \
  -21 \n \
  -18 \n \
  +12 \n \
  +7 \n \
  +13 \n \
  -11 \n \
  +20 \n \
  +12 \n \
  +1 \n \
  +15 \n \
  -14 \n \
  +4 \n \
  +11 \n \
  +18 \n \
  -2 \n \
  -7 \n \
  -12 \n \
  -11 \n \
  +5 \n \
  +10 \n \
  +6 \n \
  +8 \n \
  +18 \n \
  +6 \n \
  -13 \n \
  +19 \n \
  -5 \n \
  -3 \n \
  +14 \n \
  -3 \n \
  -20 \n \
  -3 \n \
  -3 \n \
  +16 \n \
  -15 \n \
  -12 \n \
  +8 \n \
  -24 \n \
  -16 \n \
  -13 \n \
  -3 \n \
  +13 \n \
  +6 \n \
  -12 \n \
  -31 \n \
  +7 \n \
  -18 \n \
  +17 \n \
  -13 \n \
  +1 \n \
  -15 \n \
  +16 \n \
  +4 \n \
  -1 \n \
  -17 \n \
  -1 \n \
  +16 \n \
  -4 \n \
  +13 \n \
  +8 \n \
  +3 \n \
  +33 \n \
  +8 \n \
  -6 \n \
  +20 \n \
  -4 \n \
  +2 \n \
  +13 \n \
  -29 \n \
  -17 \n \
  -22 \n \
  -24 \n \
  -5 \n \
  +2 \n \
  -12 \n \
  -1 \n \
  +2 \n \
  -15 \n \
  +2 \n \
  -11 \n \
  +6 \n \
  +1 \n \
  -2 \n \
  +5 \n \
  +4 \n \
  -22 \n \
  +5 \n \
  +19 \n \
  -13 \n \
  -7 \n \
  +16 \n \
  +6 \n \
  +2 \n \
  -22 \n \
  +19 \n \
  +9 \n \
  +8 \n \
  -9 \n \
  -12 \n \
  -18 \n \
  -13 \n \
  +1 \n \
  +5 \n \
  -9 \n \
  +10 \n \
  -11 \n \
  -10 \n \
  +16 \n \
  -15 \n \
  -2 \n \
  -16 \n \
  +1 \n \
  -15 \n \
  -17 \n \
  -3 \n \
  +6 \n \
  +11 \n \
  +4 \n \
  +11 \n \
  -16 \n \
  -3 \n \
  +6 \n \
  -1 \n \
  +13 \n \
  +18 \n \
  +6 \n \
  -2 \n \
  -6 \n \
  -4 \n \
  -5 \n \
  +20 \n \
  +19 \n \
  -8 \n \
  +1 \n \
  -13 \n \
  +16 \n \
  +1 \n \
  +10 \n \
  -25 \n \
  -19 \n \
  -4 \n \
  +9 \n \
  -8 \n \
  +17 \n \
  +6 \n \
  -19 \n \
  -2 \n \
  +5 \n \
  +12 \n \
  +7 \n \
  -21 \n \
  -12 \n \
  +3 \n \
  -7 \n \
  -11 \n \
  -3 \n \
  -18 \n \
  +2 \n \
  +12 \n \
  +20 \n \
  -23 \n \
  -19 \n \
  -17 \n \
  +9 \n \
  -19 \n \
  +1 \n \
  -14 \n \
  -5 \n \
  -4 \n \
  -9 \n \
  +17 \n \
  +4 \n \
  +3 \n \
  +15 \n \
  -13 \n \
  +1 \n \
  -12 \n \
  -17 \n \
  +8 \n \
  +8 \n \
  -20 \n \
  -17 \n \
  +15 \n \
  -16 \n \
  +10 \n \
  +7 \n \
  +2 \n \
  -10 \n \
  -2 \n \
  +8 \n \
  +19 \n \
  -6 \n \
  -17 \n \
  -8 \n \
  +9 \n \
  +17 \n \
  +25 \n \
  -5 \n \
  -18 \n \
  +4 \n \
  +18 \n \
  +9 \n \
  +18 \n \
  -14 \n \
  -2 \n \
  +11 \n \
  +14 \n \
  -17 \n \
  -15 \n \
  +38 \n \
  +12 \n \
  -2 \n \
  +14 \n \
  +4 \n \
  +21 \n \
  +16 \n \
  +12 \n \
  +15 \n \
  +23 \n \
  -1 \n \
  +6 \n \
  +9 \n \
  -24 \n \
  -6 \n \
  -13 \n \
  -3 \n \
  +33 \n \
  -13 \n \
  +62 \n \
  +81 \n \
  +11 \n \
  -5 \n \
  -27 \n \
  +9 \n \
  -7 \n \
  +20 \n \
  -19 \n \
  -4 \n \
  +27 \n \
  +28 \n \
  -29 \n \
  +82 \n \
  +11 \n \
  -10 \n \
  +8 \n \
  -22 \n \
  +42 \n \
  +34 \n \
  -24 \n \
  -15 \n \
  +19 \n \
  -66 \n \
  -70 \n \
  -34 \n \
  -18 \n \
  -548 \n \
  +408 \n \
  -1249 \n \
  -60542 \n \
  +6 \n \
  -17 \n \
  -4 \n \
  +6 \n \
  -7 \n \
  +3 \n \
  +14 \n \
  +2 \n \
  +15 \n \
  -6 \n \
  -5 \n \
  +19 \n \
  -17 \n \
  -10 \n \
  +6 \n \
  -11 \n \
  +2 \n \
  -4 \n \
  +10 \n \
  -5 \n \
  -11 \n \
  -13 \n \
  -12 \n \
  -14 \n \
  -10 \n \
  -9 \n \
  +17 \n \
  +9 \n \
  +15 \n \
  +1 \n \
  -10 \n \
  -10 \n \
  +14 \n \
  +16 \n \
  -17 \n \
  -15 \n \
  +7 \n \
  -6 \n \
  -16 \n \
  -10 \n \
  +15 \n \
  -2 \n \
  -7 \n \
  -3 \n \
  -5 \n \
  -14 \n \
  -8 \n \
  -9 \n \
  +16 \n \
  +7 \n \
  +17 \n \
  -22 \n \
  +12 \n \
  -16 \n \
  +18 \n \
  +5 \n \
  +15 \n \
  +10 \n \
  +20 \n \
  +11 \n \
  -5 \n \
  +12 \n \
  -16 \n \
  +8 \n \
  -16 \n \
  +13 \n \
  +14 \n \
  -5 \n \
  -12 \n \
  -9 \n \
  -16 \n \
  -5 \n \
  +16 \n \
  -18 \n \
  +21 \n \
  -9 \n \
  -13 \n \
  -8 \n \
  -10 \n \
  +14 \n \
  +18 \n \
  -17 \n \
  -16 \n \
  +8 \n \
  -15 \n \
  +2 \n \
  -4 \n \
  +3 \n \
  -21 \n \
  +17 \n \
  -16 \n \
  +18 \n \
  +18 \n \
  -3 \n \
  -21 \n \
  +1 \n \
  -19 \n \
  -3 \n \
  -2 \n \
  -4 \n \
  -5 \n \
  -20 \n \
  -19 \n \
  +6 \n \
  -19 \n \
  +3 \n \
  -12 \n \
  +124236 \n";         
  return part2(i) // { '1': 1, '2': 2, '4': 2, '6': 1, '7': 1 } aka [2 found 2 times, 4 found 2 times, rest found once]
}

// Part 2
// ======

let part2 = input => {
  var newarr = {};
  var tot = 0;
  input.split('\n').forEach( y =>  {
    tot += Number(y);
    if ( Object.keys( newarr ).find(x => x == tot) ) newarr[tot] += 1; // Check if existed previous
    else newarr[tot] = 1;
  });

  // return newarr
  return Object.keys( newarr ).filter(x => newarr[x] > 1 )
}

// gave up, found this on the interwebz, input failed because no empty newline at the end, and something with the foreach didnt seem to work.
part2 = (input) => {
  const deltas = input.split(/\n/g);
  const seen = {};
  let frequency = 0;

  while (true) {
      for (const delta of deltas) {
          frequency += Number(delta);
          if (seen[frequency]) {
              return frequency; // 462
          }
          seen[frequency] = true;
      }
  }
};

module.exports = { part1, part2 }

